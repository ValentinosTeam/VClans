plugins {
    id 'java'
    id "com.github.johnrengelman.shadow" version "8.1.1"
}

description = 'VClans is a plugin that allows players to create and manage clans in Minecraft. Developing for the Valentinos Minecraft server.'
group = 'gg.valentinos'
version = '0.6'

repositories {
    mavenCentral()
    maven { url "https://repo.papermc.io/repository/maven-public/" }
    maven { url "https://oss.sonatype.org/content/groups/public/" }
    maven { url "https://jitpack.io" }
    maven { url "https://repo.bluecolored.de/releases" }
    maven { url "https://maven.enginehub.org/repo/" }
}

dependencies {
    compileOnly "io.papermc.paper:paper-api:1.21.1-R0.1-SNAPSHOT"
    compileOnly "com.github.MilkBowl:VaultAPI:1.7"
    compileOnly "de.bluecolored:bluemap-api:2.7.4"
    implementation("com.technicjelle:BMUtils:4.3.1") {
        exclude group: "com.flowpowered", module: "flow-math"
    }
    compileOnly 'com.sk89q.worldguard:worldguard-bukkit:7.0.12'
    implementation 'net.kyori:adventure-text-minimessage:4.23.0'
}

tasks.build {
    dependsOn(tasks.shadowJar)
}
tasks.jar {
    archiveClassifier.set("nonshadow")
}
tasks.shadowJar {
    archiveClassifier.set("")
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}
tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}
processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('paper-plugin.yml') {
        expand props
    }
}

tasks.register('buildAndDeploy') {
    dependsOn build

    doLast {
        copy {
            from "build/libs/VClans-${version}.jar"
            into 'C:\\Users\\alexa\\Projects\\MinecraftServer\\data\\plugins'
        }

        exec {
            commandLine 'docker', 'restart', 'mcserver'
            ignoreExitValue = true
        }
    }
}