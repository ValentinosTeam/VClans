plugins {
    id 'java'
}

group = 'gg.valentinos'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
}

dependencies {
    compileOnly("io.papermc.paper:paper-api:1.21.3-R0.1-SNAPSHOT")
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('paper-plugin.yml') {
        expand props
    }
}

tasks.register('buildAndDeploy') {
    dependsOn build

    doLast {
        // 1. Add all files to stage
        exec {
            commandLine 'git', 'add', '.'
        }

        // 2. Commit with an appropriate name
        def dateStamp = new Date().format('yyyyMMdd')
        exec {
            commandLine 'git', 'commit', '-m', '\"VClans-${version}-${dateStamp}\"'
            ignoreExitValue = true
        }

        // 3. Copy and replace the plugin in the Minecraft server plugins folder
        copy {
            from "build/libs/VClans-${version}.jar"
            into 'C:\\Users\\alexa\\Projects\\MinecraftServer\\mc\\plugins'
        }

        // 4. Send a command to the Minecraft server using PlugMan to restart the plugin
        exec {
            commandLine 'docker', 'exec', 'mc', 'mc-send-to-console', 'restart'
            ignoreExitValue = true
        }
    }
}
